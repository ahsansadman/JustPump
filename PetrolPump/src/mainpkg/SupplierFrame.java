/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mainpkg;

import com.itextpdf.text.BaseColor;
import com.itextpdf.text.Document;
import com.itextpdf.text.Element;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPCell;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.plaf.ButtonUI;
import javax.swing.plaf.basic.BasicButtonUI;
import javax.swing.table.DefaultTableModel;
import myclasses.Fuel;

/**
 *
 * @author Sadman's Den
 */
public class SupplierFrame extends javax.swing.JFrame {

    /**
     * Creates new form SupplierFrame
     */
    public SupplierFrame() {
        initComponents();
        this.setLocationRelativeTo(null);
        loadStorageTableBtn.setUI((ButtonUI) BasicButtonUI.createUI(loadStorageTableBtn));
        updateBtn.setUI((ButtonUI) BasicButtonUI.createUI(updateBtn));
    }
       int id;
      public SupplierFrame(int i) {
        initComponents();
        id = i;
        this.setLocationRelativeTo(null);
        loadStorageTableBtn.setUI((ButtonUI) BasicButtonUI.createUI(loadStorageTableBtn));
        updateBtn.setUI((ButtonUI) BasicButtonUI.createUI(updateBtn));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loadStorageTableBtn = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        storageTable = new javax.swing.JTable();
        updateBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(44, 62, 80));

        loadStorageTableBtn.setBackground(new java.awt.Color(255, 51, 51));
        loadStorageTableBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        loadStorageTableBtn.setText("Load Order Table");
        loadStorageTableBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadStorageTableBtnActionPerformed(evt);
            }
        });

        storageTable.setBackground(new java.awt.Color(204, 204, 204));
        storageTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        storageTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Buyer ID", "Type", "Amount (liters)"
            }
        ));
        jScrollPane4.setViewportView(storageTable);

        updateBtn.setBackground(new java.awt.Color(34, 167, 240));
        updateBtn.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        updateBtn.setText("Initiate Order");
        updateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(loadStorageTableBtn)
                    .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(61, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(81, 81, 81)
                .addComponent(loadStorageTableBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addComponent(updateBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(65, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    void generateBill(){
         try{
            float totalPrice = oPetrol*85+oPetrol*90+oDiesel*55+oKerosene+55;
            float vat = totalPrice - ((totalPrice*15)/100);
            DefaultTableModel dm = new DefaultTableModel();
            dm = (DefaultTableModel)storageTable.getModel();
            idCustomer = (String)dm.getValueAt(0, 0);
            
            Document doc = new Document();
            PdfWriter writer  = PdfWriter.getInstance(doc,new FileOutputStream("Bill.pdf"));
            doc.open();
            doc.add(new Paragraph("This is a test PDF file."));
            doc.add(new Paragraph("\n\n"));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("Customer ID: "+idCustomer));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("FuelType Amount"));
            doc.add(new Paragraph("\n\n"));
            doc.add(new Paragraph("Petrol "+oPetrol));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("Octane "+oOctane));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("Diesel "+oDiesel));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("Kerosene "+oKerosene));
            doc.add(new Paragraph("\n\n"));
            doc.add(new Paragraph("TotalPrice ="+totalPrice));
            doc.add(new Paragraph("\n"));
            doc.add(new Paragraph("15% VAT"));
             doc.add(new Paragraph("\n"));
             doc.add(new Paragraph("Price to be Paid: "+vat));
            
            doc.close();
            writer.close();
            JOptionPane.showMessageDialog(null,"File created successfully");
            Runtime.getRuntime().exec("rundll32 url.dll, FileProtocolHandler Bill.pdf");
            this.dispose();
        }
        catch(Exception e){
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    
    void updateStorage(){
            float Petrol = 0, Octane = 0, Diesel = 0, Kerosene = 0;
            File file = new File("SupplierStorageList.txt");
            ArrayList<String> List = new ArrayList();
                 Scanner s = null;
                try {
                s = new Scanner(file);
                     } catch (FileNotFoundException ex) {
                Logger.getLogger(CarWashInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
           while (s.hasNextLine()){
                List.add(s.nextLine());
            }
            s.close();
            
            for(String ss : List){
            String[] str = ss.split(",");
            if(str[0].equals("Petrol")) Petrol+= Float.parseFloat(str[1]);
            if(str[0].equals("Octane")) Octane+= Float.parseFloat(str[1]);
            if(str[0].equals("Diesel")) Diesel+= Float.parseFloat(str[1]);
            if(str[0].equals("Kerosene")) Kerosene+= Float.parseFloat(str[1]);
        }
            
            float sPetrol = Petrol - oPetrol;
            float sDiesel = Diesel - oDiesel;
            float sOctane = Octane - oOctane ;
            float sKerosene = Kerosene - oKerosene;
            
            System.out.println(oPetrol);
            System.out.println(Petrol);
            System.out.println(sPetrol);
             File f2 = new File("myTempSupplierStorageList.txt");
             BufferedWriter bw = null;
            try {
                if(!f2.exists()) bw = new BufferedWriter(new FileWriter(f2));
                else  {
                bw = new BufferedWriter(new FileWriter(f2,true));
                }
            }   
            catch (IOException ex) {
                Logger.getLogger(BuyFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            try {
            bw.write("Petrol"+","+sPetrol);bw.newLine();
            bw.write("Octane"+","+sDiesel);bw.newLine();
            bw.write("Diesel"+","+sOctane);bw.newLine();
            bw.write("Kerosene"+","+sKerosene);bw.newLine();
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(SupplierFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
      if(file.delete()) 
        { 
            System.out.println(file.getName() + "File deleted successfully"); 
        } 
        else
        { 
           System.out.println(file.getName() +"Failed to delete the file"); 
        } 
        boolean successful = f2.renameTo(file);
        generateBill();
    }
    
    
    private void loadStorageTableBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadStorageTableBtnActionPerformed
             float sPetrol = 0, sOctane = 0, sDiesel = 0, sKerosene = 0;
              ArrayList<String> fuelList = new ArrayList();
              Scanner s = null;
        try {
            s = new Scanner(new File("OrderList.txt"));
        } catch (FileNotFoundException ex) {
            Logger.getLogger(CarWashInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
           while (s.hasNextLine()){
                fuelList.add(s.nextLine());
            }
            s.close();
          
            for(String str : fuelList){
                 String[] ss = str.split(",");
               if(Integer.parseInt(ss[0])==id){
                 DefaultTableModel dm = new DefaultTableModel();
                 dm = (DefaultTableModel)storageTable.getModel();
                 dm.addRow(new Object[]{ss[1], ss[2], ss[3]});
             }  
            
            }
    }//GEN-LAST:event_loadStorageTableBtnActionPerformed

    private void updateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBtnActionPerformed

                 float nPetrol = 0, nOctane = 0, nDiesel = 0, nKerosene = 0;     
                 
                 ArrayList<String> orderList = new ArrayList();
                 ArrayList<String> newList = new ArrayList();
                 DefaultTableModel dm = new DefaultTableModel();
                 dm = (DefaultTableModel)storageTable.getModel();
                 int rowCount = dm.getRowCount();
                 
                 for(int i=0; i<rowCount; i++){
                 String s = dm.getValueAt(i, 1)+","+ dm.getValueAt(i,2);
                 orderList.add(s);
                 }
                 
            for(String ss : orderList){
            String[] str = ss.split(",");
            if(str[0].equals("Petrol")) oPetrol+= Float.parseFloat(str[1]);
            if(str[0].equals("Octane")) oOctane+= Float.parseFloat(str[1]);
            if(str[0].equals("Diesel")) oDiesel+= Float.parseFloat(str[1]);
            if(str[0].equals("Kerosene")) oKerosene+= Float.parseFloat(str[1]);
            }
                 
                 File file = new File("FuelStorageList.txt");
                 
                 
                 ArrayList<String> List = new ArrayList();
                 Scanner s = null;
                try {
                s = new Scanner(file);
                     } catch (FileNotFoundException ex) {
                Logger.getLogger(CarWashInternalFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
           while (s.hasNextLine()){
                List.add(s.nextLine());
            }
            s.close();
            
            for(String ss : List){
            String[] str = ss.split(",");
            if(str[0].equals("Petrol")) nPetrol+= Float.parseFloat(str[1]);
            if(str[0].equals("Octane")) nOctane+= Float.parseFloat(str[1]);
            if(str[0].equals("Diesel")) nDiesel+= Float.parseFloat(str[1]);
            if(str[0].equals("Kerosene")) nKerosene+= Float.parseFloat(str[1]);
        }
            
             //System.out.println(nPetrol);
             
             File f2 = new File("myTempFuelStorageList.txt");
             BufferedWriter bw = null;
            try {
                if(!f2.exists()) bw = new BufferedWriter(new FileWriter(f2));
                else  {
                bw = new BufferedWriter(new FileWriter(f2,true));
                }
            }   
            catch (IOException ex) {
                Logger.getLogger(BuyFrame.class.getName()).log(Level.SEVERE, null, ex);
            }
            float Petrol = oPetrol + nPetrol;
            float Diesel= oDiesel + nDiesel;
            float Octane = oOctane + nOctane;
            float Kerosene = oKerosene + nKerosene;
             
        try {
            bw.write("Petrol"+","+Petrol);bw.newLine();
            bw.write("Octane"+","+Octane);bw.newLine();
            bw.write("Diesel"+","+Diesel);bw.newLine();
            bw.write("Kerosene"+","+Kerosene);bw.newLine();
            bw.close();
        } catch (IOException ex) {
            Logger.getLogger(SupplierFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
      if(file.delete()) 
        { 
            System.out.println(file.getName() + "File deleted successfully"); 
        } 
        else
        { 
           System.out.println(file.getName() +"Failed to delete the file"); 
        } 
        boolean successful = f2.renameTo(file);
        updateStorage();
        
     
    }//GEN-LAST:event_updateBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SupplierFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SupplierFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SupplierFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SupplierFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SupplierFrame().setVisible(true);
            }
        });
    }
    String idCustomer ;
    float oPetrol = 0, oOctane = 0, oDiesel = 0, oKerosene = 0;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JButton loadStorageTableBtn;
    private javax.swing.JTable storageTable;
    private javax.swing.JButton updateBtn;
    // End of variables declaration//GEN-END:variables
}
